// source: mail.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.otp.AccountEmailVerification', null, global);
goog.exportSymbol('proto.otp.AccountEmailVerificationResponse', null, global);
goog.exportSymbol('proto.otp.AccountOnboardingEmail', null, global);
goog.exportSymbol('proto.otp.AccountOnboardingEmailResponse', null, global);
goog.exportSymbol('proto.otp.AccountRegistrationActionEmail', null, global);
goog.exportSymbol('proto.otp.AccountRegistrationActionResponse', null, global);
goog.exportSymbol('proto.otp.EmailResetPasswordData', null, global);
goog.exportSymbol('proto.otp.EmailResetPasswordResponse', null, global);
goog.exportSymbol('proto.otp.SendAdminRegistrationEmailRequest', null, global);
goog.exportSymbol('proto.otp.SendAdminRegistrationEmailResponse', null, global);
goog.exportSymbol('proto.otp.SendKorlabVerificationEmail', null, global);
goog.exportSymbol('proto.otp.SendKorlabVerificationResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.AccountOnboardingEmail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.AccountOnboardingEmail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.AccountOnboardingEmail.displayName = 'proto.otp.AccountOnboardingEmail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.AccountOnboardingEmailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.AccountOnboardingEmailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.AccountOnboardingEmailResponse.displayName = 'proto.otp.AccountOnboardingEmailResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.AccountRegistrationActionEmail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.AccountRegistrationActionEmail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.AccountRegistrationActionEmail.displayName = 'proto.otp.AccountRegistrationActionEmail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.AccountRegistrationActionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.AccountRegistrationActionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.AccountRegistrationActionResponse.displayName = 'proto.otp.AccountRegistrationActionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.AccountEmailVerification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.AccountEmailVerification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.AccountEmailVerification.displayName = 'proto.otp.AccountEmailVerification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.AccountEmailVerificationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.AccountEmailVerificationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.AccountEmailVerificationResponse.displayName = 'proto.otp.AccountEmailVerificationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.SendKorlabVerificationEmail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.SendKorlabVerificationEmail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.SendKorlabVerificationEmail.displayName = 'proto.otp.SendKorlabVerificationEmail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.SendKorlabVerificationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.SendKorlabVerificationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.SendKorlabVerificationResponse.displayName = 'proto.otp.SendKorlabVerificationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.SendAdminRegistrationEmailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.SendAdminRegistrationEmailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.SendAdminRegistrationEmailRequest.displayName = 'proto.otp.SendAdminRegistrationEmailRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.SendAdminRegistrationEmailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.SendAdminRegistrationEmailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.SendAdminRegistrationEmailResponse.displayName = 'proto.otp.SendAdminRegistrationEmailResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.EmailResetPasswordData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.EmailResetPasswordData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.EmailResetPasswordData.displayName = 'proto.otp.EmailResetPasswordData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.otp.EmailResetPasswordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.otp.EmailResetPasswordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.otp.EmailResetPasswordResponse.displayName = 'proto.otp.EmailResetPasswordResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.AccountOnboardingEmail.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.AccountOnboardingEmail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.AccountOnboardingEmail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountOnboardingEmail.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiveremail: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailsubject: jspb.Message.getFieldWithDefault(msg, 2, ""),
    receivername: jspb.Message.getFieldWithDefault(msg, 4, ""),
    emailcontent: jspb.Message.getFieldWithDefault(msg, 5, ""),
    registeredas: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.AccountOnboardingEmail}
 */
proto.otp.AccountOnboardingEmail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.AccountOnboardingEmail;
  return proto.otp.AccountOnboardingEmail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.AccountOnboardingEmail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.AccountOnboardingEmail}
 */
proto.otp.AccountOnboardingEmail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiveremail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailsubject(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceivername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailcontent(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegisteredas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.AccountOnboardingEmail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.AccountOnboardingEmail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.AccountOnboardingEmail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountOnboardingEmail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiveremail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailsubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReceivername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmailcontent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRegisteredas();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string receiverEmail = 1;
 * @return {string}
 */
proto.otp.AccountOnboardingEmail.prototype.getReceiveremail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountOnboardingEmail} returns this
 */
proto.otp.AccountOnboardingEmail.prototype.setReceiveremail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string emailSubject = 2;
 * @return {string}
 */
proto.otp.AccountOnboardingEmail.prototype.getEmailsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountOnboardingEmail} returns this
 */
proto.otp.AccountOnboardingEmail.prototype.setEmailsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string receiverName = 4;
 * @return {string}
 */
proto.otp.AccountOnboardingEmail.prototype.getReceivername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountOnboardingEmail} returns this
 */
proto.otp.AccountOnboardingEmail.prototype.setReceivername = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string emailContent = 5;
 * @return {string}
 */
proto.otp.AccountOnboardingEmail.prototype.getEmailcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountOnboardingEmail} returns this
 */
proto.otp.AccountOnboardingEmail.prototype.setEmailcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string registeredAs = 6;
 * @return {string}
 */
proto.otp.AccountOnboardingEmail.prototype.getRegisteredas = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountOnboardingEmail} returns this
 */
proto.otp.AccountOnboardingEmail.prototype.setRegisteredas = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.AccountOnboardingEmailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.AccountOnboardingEmailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.AccountOnboardingEmailResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountOnboardingEmailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.AccountOnboardingEmailResponse}
 */
proto.otp.AccountOnboardingEmailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.AccountOnboardingEmailResponse;
  return proto.otp.AccountOnboardingEmailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.AccountOnboardingEmailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.AccountOnboardingEmailResponse}
 */
proto.otp.AccountOnboardingEmailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResponse(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.AccountOnboardingEmailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.AccountOnboardingEmailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.AccountOnboardingEmailResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountOnboardingEmailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 response = 1;
 * @return {number}
 */
proto.otp.AccountOnboardingEmailResponse.prototype.getResponse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.otp.AccountOnboardingEmailResponse} returns this
 */
proto.otp.AccountOnboardingEmailResponse.prototype.setResponse = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.otp.AccountOnboardingEmailResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountOnboardingEmailResponse} returns this
 */
proto.otp.AccountOnboardingEmailResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.AccountRegistrationActionEmail.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.AccountRegistrationActionEmail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.AccountRegistrationActionEmail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountRegistrationActionEmail.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiveremail: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailsubject: jspb.Message.getFieldWithDefault(msg, 2, ""),
    receivername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    emailcontent: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isapproved: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    registeredas: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.AccountRegistrationActionEmail}
 */
proto.otp.AccountRegistrationActionEmail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.AccountRegistrationActionEmail;
  return proto.otp.AccountRegistrationActionEmail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.AccountRegistrationActionEmail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.AccountRegistrationActionEmail}
 */
proto.otp.AccountRegistrationActionEmail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiveremail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailsubject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceivername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailcontent(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsapproved(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegisteredas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.AccountRegistrationActionEmail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.AccountRegistrationActionEmail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.AccountRegistrationActionEmail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountRegistrationActionEmail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiveremail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailsubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReceivername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmailcontent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsapproved();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getRegisteredas();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string receiverEmail = 1;
 * @return {string}
 */
proto.otp.AccountRegistrationActionEmail.prototype.getReceiveremail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountRegistrationActionEmail} returns this
 */
proto.otp.AccountRegistrationActionEmail.prototype.setReceiveremail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string emailSubject = 2;
 * @return {string}
 */
proto.otp.AccountRegistrationActionEmail.prototype.getEmailsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountRegistrationActionEmail} returns this
 */
proto.otp.AccountRegistrationActionEmail.prototype.setEmailsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string receiverName = 3;
 * @return {string}
 */
proto.otp.AccountRegistrationActionEmail.prototype.getReceivername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountRegistrationActionEmail} returns this
 */
proto.otp.AccountRegistrationActionEmail.prototype.setReceivername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string emailContent = 4;
 * @return {string}
 */
proto.otp.AccountRegistrationActionEmail.prototype.getEmailcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountRegistrationActionEmail} returns this
 */
proto.otp.AccountRegistrationActionEmail.prototype.setEmailcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool isApproved = 5;
 * @return {boolean}
 */
proto.otp.AccountRegistrationActionEmail.prototype.getIsapproved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.otp.AccountRegistrationActionEmail} returns this
 */
proto.otp.AccountRegistrationActionEmail.prototype.setIsapproved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string registeredAs = 6;
 * @return {string}
 */
proto.otp.AccountRegistrationActionEmail.prototype.getRegisteredas = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountRegistrationActionEmail} returns this
 */
proto.otp.AccountRegistrationActionEmail.prototype.setRegisteredas = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.AccountRegistrationActionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.AccountRegistrationActionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.AccountRegistrationActionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountRegistrationActionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.AccountRegistrationActionResponse}
 */
proto.otp.AccountRegistrationActionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.AccountRegistrationActionResponse;
  return proto.otp.AccountRegistrationActionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.AccountRegistrationActionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.AccountRegistrationActionResponse}
 */
proto.otp.AccountRegistrationActionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResponse(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.AccountRegistrationActionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.AccountRegistrationActionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.AccountRegistrationActionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountRegistrationActionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 response = 1;
 * @return {number}
 */
proto.otp.AccountRegistrationActionResponse.prototype.getResponse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.otp.AccountRegistrationActionResponse} returns this
 */
proto.otp.AccountRegistrationActionResponse.prototype.setResponse = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.otp.AccountRegistrationActionResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountRegistrationActionResponse} returns this
 */
proto.otp.AccountRegistrationActionResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.AccountEmailVerification.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.AccountEmailVerification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.AccountEmailVerification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountEmailVerification.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiveremail: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailsubject: jspb.Message.getFieldWithDefault(msg, 2, ""),
    verificationlink: jspb.Message.getFieldWithDefault(msg, 3, ""),
    receivername: jspb.Message.getFieldWithDefault(msg, 4, ""),
    emailcontent: jspb.Message.getFieldWithDefault(msg, 5, ""),
    expiresin: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.AccountEmailVerification}
 */
proto.otp.AccountEmailVerification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.AccountEmailVerification;
  return proto.otp.AccountEmailVerification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.AccountEmailVerification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.AccountEmailVerification}
 */
proto.otp.AccountEmailVerification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiveremail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailsubject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerificationlink(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceivername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailcontent(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiresin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.AccountEmailVerification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.AccountEmailVerification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.AccountEmailVerification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountEmailVerification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiveremail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailsubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVerificationlink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReceivername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmailcontent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExpiresin();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string receiverEmail = 1;
 * @return {string}
 */
proto.otp.AccountEmailVerification.prototype.getReceiveremail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountEmailVerification} returns this
 */
proto.otp.AccountEmailVerification.prototype.setReceiveremail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string emailSubject = 2;
 * @return {string}
 */
proto.otp.AccountEmailVerification.prototype.getEmailsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountEmailVerification} returns this
 */
proto.otp.AccountEmailVerification.prototype.setEmailsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string verificationLink = 3;
 * @return {string}
 */
proto.otp.AccountEmailVerification.prototype.getVerificationlink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountEmailVerification} returns this
 */
proto.otp.AccountEmailVerification.prototype.setVerificationlink = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string receiverName = 4;
 * @return {string}
 */
proto.otp.AccountEmailVerification.prototype.getReceivername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountEmailVerification} returns this
 */
proto.otp.AccountEmailVerification.prototype.setReceivername = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string emailContent = 5;
 * @return {string}
 */
proto.otp.AccountEmailVerification.prototype.getEmailcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountEmailVerification} returns this
 */
proto.otp.AccountEmailVerification.prototype.setEmailcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string expiresIn = 6;
 * @return {string}
 */
proto.otp.AccountEmailVerification.prototype.getExpiresin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountEmailVerification} returns this
 */
proto.otp.AccountEmailVerification.prototype.setExpiresin = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.AccountEmailVerificationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.AccountEmailVerificationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.AccountEmailVerificationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountEmailVerificationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.AccountEmailVerificationResponse}
 */
proto.otp.AccountEmailVerificationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.AccountEmailVerificationResponse;
  return proto.otp.AccountEmailVerificationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.AccountEmailVerificationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.AccountEmailVerificationResponse}
 */
proto.otp.AccountEmailVerificationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResponse(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.AccountEmailVerificationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.AccountEmailVerificationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.AccountEmailVerificationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.AccountEmailVerificationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 response = 1;
 * @return {number}
 */
proto.otp.AccountEmailVerificationResponse.prototype.getResponse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.otp.AccountEmailVerificationResponse} returns this
 */
proto.otp.AccountEmailVerificationResponse.prototype.setResponse = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.otp.AccountEmailVerificationResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.AccountEmailVerificationResponse} returns this
 */
proto.otp.AccountEmailVerificationResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.SendKorlabVerificationEmail.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.SendKorlabVerificationEmail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.SendKorlabVerificationEmail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.SendKorlabVerificationEmail.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiveremail: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailsubject: jspb.Message.getFieldWithDefault(msg, 2, ""),
    receivername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    emailcontent: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.SendKorlabVerificationEmail}
 */
proto.otp.SendKorlabVerificationEmail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.SendKorlabVerificationEmail;
  return proto.otp.SendKorlabVerificationEmail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.SendKorlabVerificationEmail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.SendKorlabVerificationEmail}
 */
proto.otp.SendKorlabVerificationEmail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiveremail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailsubject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceivername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailcontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.SendKorlabVerificationEmail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.SendKorlabVerificationEmail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.SendKorlabVerificationEmail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.SendKorlabVerificationEmail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiveremail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailsubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReceivername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmailcontent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string receiverEmail = 1;
 * @return {string}
 */
proto.otp.SendKorlabVerificationEmail.prototype.getReceiveremail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.SendKorlabVerificationEmail} returns this
 */
proto.otp.SendKorlabVerificationEmail.prototype.setReceiveremail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string emailSubject = 2;
 * @return {string}
 */
proto.otp.SendKorlabVerificationEmail.prototype.getEmailsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.SendKorlabVerificationEmail} returns this
 */
proto.otp.SendKorlabVerificationEmail.prototype.setEmailsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string receiverName = 3;
 * @return {string}
 */
proto.otp.SendKorlabVerificationEmail.prototype.getReceivername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.SendKorlabVerificationEmail} returns this
 */
proto.otp.SendKorlabVerificationEmail.prototype.setReceivername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string emailContent = 4;
 * @return {string}
 */
proto.otp.SendKorlabVerificationEmail.prototype.getEmailcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.SendKorlabVerificationEmail} returns this
 */
proto.otp.SendKorlabVerificationEmail.prototype.setEmailcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.SendKorlabVerificationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.SendKorlabVerificationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.SendKorlabVerificationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.SendKorlabVerificationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.SendKorlabVerificationResponse}
 */
proto.otp.SendKorlabVerificationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.SendKorlabVerificationResponse;
  return proto.otp.SendKorlabVerificationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.SendKorlabVerificationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.SendKorlabVerificationResponse}
 */
proto.otp.SendKorlabVerificationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResponse(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.SendKorlabVerificationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.SendKorlabVerificationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.SendKorlabVerificationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.SendKorlabVerificationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 response = 1;
 * @return {number}
 */
proto.otp.SendKorlabVerificationResponse.prototype.getResponse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.otp.SendKorlabVerificationResponse} returns this
 */
proto.otp.SendKorlabVerificationResponse.prototype.setResponse = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.otp.SendKorlabVerificationResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.SendKorlabVerificationResponse} returns this
 */
proto.otp.SendKorlabVerificationResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.SendAdminRegistrationEmailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.SendAdminRegistrationEmailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.SendAdminRegistrationEmailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.SendAdminRegistrationEmailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiveremail: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailsubject: jspb.Message.getFieldWithDefault(msg, 2, ""),
    receivername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    emailcontent: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.SendAdminRegistrationEmailRequest}
 */
proto.otp.SendAdminRegistrationEmailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.SendAdminRegistrationEmailRequest;
  return proto.otp.SendAdminRegistrationEmailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.SendAdminRegistrationEmailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.SendAdminRegistrationEmailRequest}
 */
proto.otp.SendAdminRegistrationEmailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiveremail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailsubject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceivername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailcontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.SendAdminRegistrationEmailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.SendAdminRegistrationEmailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.SendAdminRegistrationEmailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.SendAdminRegistrationEmailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiveremail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailsubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReceivername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmailcontent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string receiverEmail = 1;
 * @return {string}
 */
proto.otp.SendAdminRegistrationEmailRequest.prototype.getReceiveremail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.SendAdminRegistrationEmailRequest} returns this
 */
proto.otp.SendAdminRegistrationEmailRequest.prototype.setReceiveremail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string emailSubject = 2;
 * @return {string}
 */
proto.otp.SendAdminRegistrationEmailRequest.prototype.getEmailsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.SendAdminRegistrationEmailRequest} returns this
 */
proto.otp.SendAdminRegistrationEmailRequest.prototype.setEmailsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string receiverName = 3;
 * @return {string}
 */
proto.otp.SendAdminRegistrationEmailRequest.prototype.getReceivername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.SendAdminRegistrationEmailRequest} returns this
 */
proto.otp.SendAdminRegistrationEmailRequest.prototype.setReceivername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string emailContent = 4;
 * @return {string}
 */
proto.otp.SendAdminRegistrationEmailRequest.prototype.getEmailcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.SendAdminRegistrationEmailRequest} returns this
 */
proto.otp.SendAdminRegistrationEmailRequest.prototype.setEmailcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.SendAdminRegistrationEmailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.SendAdminRegistrationEmailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.SendAdminRegistrationEmailResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.SendAdminRegistrationEmailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.SendAdminRegistrationEmailResponse}
 */
proto.otp.SendAdminRegistrationEmailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.SendAdminRegistrationEmailResponse;
  return proto.otp.SendAdminRegistrationEmailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.SendAdminRegistrationEmailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.SendAdminRegistrationEmailResponse}
 */
proto.otp.SendAdminRegistrationEmailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResponse(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.SendAdminRegistrationEmailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.SendAdminRegistrationEmailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.SendAdminRegistrationEmailResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.SendAdminRegistrationEmailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 response = 1;
 * @return {number}
 */
proto.otp.SendAdminRegistrationEmailResponse.prototype.getResponse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.otp.SendAdminRegistrationEmailResponse} returns this
 */
proto.otp.SendAdminRegistrationEmailResponse.prototype.setResponse = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.otp.SendAdminRegistrationEmailResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.SendAdminRegistrationEmailResponse} returns this
 */
proto.otp.SendAdminRegistrationEmailResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.EmailResetPasswordData.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.EmailResetPasswordData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.EmailResetPasswordData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.EmailResetPasswordData.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiveremail: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailsubject: jspb.Message.getFieldWithDefault(msg, 2, ""),
    verificationlink: jspb.Message.getFieldWithDefault(msg, 3, ""),
    timelimit: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.EmailResetPasswordData}
 */
proto.otp.EmailResetPasswordData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.EmailResetPasswordData;
  return proto.otp.EmailResetPasswordData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.EmailResetPasswordData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.EmailResetPasswordData}
 */
proto.otp.EmailResetPasswordData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiveremail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailsubject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerificationlink(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimelimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.EmailResetPasswordData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.EmailResetPasswordData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.EmailResetPasswordData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.EmailResetPasswordData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiveremail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailsubject();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVerificationlink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTimelimit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string receiverEmail = 1;
 * @return {string}
 */
proto.otp.EmailResetPasswordData.prototype.getReceiveremail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.EmailResetPasswordData} returns this
 */
proto.otp.EmailResetPasswordData.prototype.setReceiveremail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string emailSubject = 2;
 * @return {string}
 */
proto.otp.EmailResetPasswordData.prototype.getEmailsubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.EmailResetPasswordData} returns this
 */
proto.otp.EmailResetPasswordData.prototype.setEmailsubject = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string verificationLink = 3;
 * @return {string}
 */
proto.otp.EmailResetPasswordData.prototype.getVerificationlink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.EmailResetPasswordData} returns this
 */
proto.otp.EmailResetPasswordData.prototype.setVerificationlink = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string timeLimit = 4;
 * @return {string}
 */
proto.otp.EmailResetPasswordData.prototype.getTimelimit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.EmailResetPasswordData} returns this
 */
proto.otp.EmailResetPasswordData.prototype.setTimelimit = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.otp.EmailResetPasswordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.otp.EmailResetPasswordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.otp.EmailResetPasswordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.EmailResetPasswordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.otp.EmailResetPasswordResponse}
 */
proto.otp.EmailResetPasswordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.otp.EmailResetPasswordResponse;
  return proto.otp.EmailResetPasswordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.otp.EmailResetPasswordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.otp.EmailResetPasswordResponse}
 */
proto.otp.EmailResetPasswordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResponse(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.otp.EmailResetPasswordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.otp.EmailResetPasswordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.otp.EmailResetPasswordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.otp.EmailResetPasswordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 response = 1;
 * @return {number}
 */
proto.otp.EmailResetPasswordResponse.prototype.getResponse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.otp.EmailResetPasswordResponse} returns this
 */
proto.otp.EmailResetPasswordResponse.prototype.setResponse = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.otp.EmailResetPasswordResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.otp.EmailResetPasswordResponse} returns this
 */
proto.otp.EmailResetPasswordResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.otp);
