/**
 * @fileoverview gRPC-Web generated client stub for otp
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: mail.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.otp = require('./mail_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.otp.MailServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.otp.MailServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.otp.AccountOnboardingEmail,
 *   !proto.otp.AccountOnboardingEmailResponse>}
 */
const methodDescriptor_MailService_SendOnboardingEmail = new grpc.web.MethodDescriptor(
  '/otp.MailService/SendOnboardingEmail',
  grpc.web.MethodType.UNARY,
  proto.otp.AccountOnboardingEmail,
  proto.otp.AccountOnboardingEmailResponse,
  /**
   * @param {!proto.otp.AccountOnboardingEmail} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.otp.AccountOnboardingEmailResponse.deserializeBinary
);


/**
 * @param {!proto.otp.AccountOnboardingEmail} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.otp.AccountOnboardingEmailResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.otp.AccountOnboardingEmailResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.otp.MailServiceClient.prototype.sendOnboardingEmail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/otp.MailService/SendOnboardingEmail',
      request,
      metadata || {},
      methodDescriptor_MailService_SendOnboardingEmail,
      callback);
};


/**
 * @param {!proto.otp.AccountOnboardingEmail} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.otp.AccountOnboardingEmailResponse>}
 *     Promise that resolves to the response
 */
proto.otp.MailServicePromiseClient.prototype.sendOnboardingEmail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/otp.MailService/SendOnboardingEmail',
      request,
      metadata || {},
      methodDescriptor_MailService_SendOnboardingEmail);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.otp.AccountRegistrationActionEmail,
 *   !proto.otp.AccountRegistrationActionResponse>}
 */
const methodDescriptor_MailService_SendAccountRegistrationEmailAction = new grpc.web.MethodDescriptor(
  '/otp.MailService/SendAccountRegistrationEmailAction',
  grpc.web.MethodType.UNARY,
  proto.otp.AccountRegistrationActionEmail,
  proto.otp.AccountRegistrationActionResponse,
  /**
   * @param {!proto.otp.AccountRegistrationActionEmail} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.otp.AccountRegistrationActionResponse.deserializeBinary
);


/**
 * @param {!proto.otp.AccountRegistrationActionEmail} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.otp.AccountRegistrationActionResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.otp.AccountRegistrationActionResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.otp.MailServiceClient.prototype.sendAccountRegistrationEmailAction =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/otp.MailService/SendAccountRegistrationEmailAction',
      request,
      metadata || {},
      methodDescriptor_MailService_SendAccountRegistrationEmailAction,
      callback);
};


/**
 * @param {!proto.otp.AccountRegistrationActionEmail} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.otp.AccountRegistrationActionResponse>}
 *     Promise that resolves to the response
 */
proto.otp.MailServicePromiseClient.prototype.sendAccountRegistrationEmailAction =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/otp.MailService/SendAccountRegistrationEmailAction',
      request,
      metadata || {},
      methodDescriptor_MailService_SendAccountRegistrationEmailAction);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.otp.AccountEmailVerification,
 *   !proto.otp.AccountEmailVerificationResponse>}
 */
const methodDescriptor_MailService_SendAccountEmailVerification = new grpc.web.MethodDescriptor(
  '/otp.MailService/SendAccountEmailVerification',
  grpc.web.MethodType.UNARY,
  proto.otp.AccountEmailVerification,
  proto.otp.AccountEmailVerificationResponse,
  /**
   * @param {!proto.otp.AccountEmailVerification} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.otp.AccountEmailVerificationResponse.deserializeBinary
);


/**
 * @param {!proto.otp.AccountEmailVerification} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.otp.AccountEmailVerificationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.otp.AccountEmailVerificationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.otp.MailServiceClient.prototype.sendAccountEmailVerification =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/otp.MailService/SendAccountEmailVerification',
      request,
      metadata || {},
      methodDescriptor_MailService_SendAccountEmailVerification,
      callback);
};


/**
 * @param {!proto.otp.AccountEmailVerification} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.otp.AccountEmailVerificationResponse>}
 *     Promise that resolves to the response
 */
proto.otp.MailServicePromiseClient.prototype.sendAccountEmailVerification =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/otp.MailService/SendAccountEmailVerification',
      request,
      metadata || {},
      methodDescriptor_MailService_SendAccountEmailVerification);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.otp.SendKorlabVerificationEmail,
 *   !proto.otp.SendKorlabVerificationResponse>}
 */
const methodDescriptor_MailService_SendVerificationMessage = new grpc.web.MethodDescriptor(
  '/otp.MailService/SendVerificationMessage',
  grpc.web.MethodType.UNARY,
  proto.otp.SendKorlabVerificationEmail,
  proto.otp.SendKorlabVerificationResponse,
  /**
   * @param {!proto.otp.SendKorlabVerificationEmail} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.otp.SendKorlabVerificationResponse.deserializeBinary
);


/**
 * @param {!proto.otp.SendKorlabVerificationEmail} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.otp.SendKorlabVerificationResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.otp.SendKorlabVerificationResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.otp.MailServiceClient.prototype.sendVerificationMessage =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/otp.MailService/SendVerificationMessage',
      request,
      metadata || {},
      methodDescriptor_MailService_SendVerificationMessage,
      callback);
};


/**
 * @param {!proto.otp.SendKorlabVerificationEmail} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.otp.SendKorlabVerificationResponse>}
 *     Promise that resolves to the response
 */
proto.otp.MailServicePromiseClient.prototype.sendVerificationMessage =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/otp.MailService/SendVerificationMessage',
      request,
      metadata || {},
      methodDescriptor_MailService_SendVerificationMessage);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.otp.SendAdminRegistrationEmailRequest,
 *   !proto.otp.SendAdminRegistrationEmailResponse>}
 */
const methodDescriptor_MailService_SendAdminRegistrationEmail = new grpc.web.MethodDescriptor(
  '/otp.MailService/SendAdminRegistrationEmail',
  grpc.web.MethodType.UNARY,
  proto.otp.SendAdminRegistrationEmailRequest,
  proto.otp.SendAdminRegistrationEmailResponse,
  /**
   * @param {!proto.otp.SendAdminRegistrationEmailRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.otp.SendAdminRegistrationEmailResponse.deserializeBinary
);


/**
 * @param {!proto.otp.SendAdminRegistrationEmailRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.otp.SendAdminRegistrationEmailResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.otp.SendAdminRegistrationEmailResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.otp.MailServiceClient.prototype.sendAdminRegistrationEmail =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/otp.MailService/SendAdminRegistrationEmail',
      request,
      metadata || {},
      methodDescriptor_MailService_SendAdminRegistrationEmail,
      callback);
};


/**
 * @param {!proto.otp.SendAdminRegistrationEmailRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.otp.SendAdminRegistrationEmailResponse>}
 *     Promise that resolves to the response
 */
proto.otp.MailServicePromiseClient.prototype.sendAdminRegistrationEmail =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/otp.MailService/SendAdminRegistrationEmail',
      request,
      metadata || {},
      methodDescriptor_MailService_SendAdminRegistrationEmail);
};


module.exports = proto.otp;

